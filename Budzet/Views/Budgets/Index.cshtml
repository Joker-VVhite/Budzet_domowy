@model IEnumerable<Budzet.Models.Transaction>

<h2>Podsumowanie Budżetu</h2>

<!-- Sekcja tabeli i wykresu -->
<div class="row">
    <!-- Tabela z podsumowaniem budżetu -->
    <div class="col-md-6">
        <h3>Całkowity Budżet</h3>
        <p><strong>@ViewBag.TotalBudget PLN</strong></p>

        <h3>Ostatnie Transakcje</h3>
        <table class="table">
            <thead>
                <tr>
                    <th>Tytuł</th>
                    <th>Kwota</th>
                    <th>Kategoria</th>
                    <th>Typ</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ViewBag.LastTransactions)
                {
                    <tr>
                        <td>@item.Title</td>
                        @if (@item.Type == "Wypłata")
                        {

                            <td> <span style="font-weight:bold;color:#ff0000;">-@item.Amount</span> zł</td>
                        }
                        else
                        {
                            <td> <span style="font-weight:bold;color:#2ff227">+@item.Amount</span> zł</td>
                        }
                        <td>@item.Category?.Name</td>

                        <td>@item.Type</td>
                        <td></td>
                    </tr>
                }

            </tbody>
        </table>
    </div>

    <!-- Wykres -->
    <div class="col-md-6">
        <h3>Wydatki według kategorii</h3>
        <canvas id="budgetChart"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Dane do wykresu
    const chartLabels = @Html.Raw(Json.Serialize(ViewBag.ChartLabels));
    const chartData = @Html.Raw(Json.Serialize(ViewBag.ChartData));
    const chartColors = @Html.Raw(Json.Serialize(ViewBag.ChartColors));

    // Inicjalizacja wykresu Chart.js
    const ctx = document.getElementById('budgetChart').getContext('2d');
    new Chart(ctx, {
        type: 'pie',
        data: {
            labels: chartLabels, // Kategorie
            datasets: [{
                data: chartData, // Suma kwot
                backgroundColor: chartColors // Losowe kolory
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                }
            }
        }
    });
</script>